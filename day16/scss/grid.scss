@use "sass:map";
@use "./partials/mixin";

:root {
    --max-column: 12;
    --container-width: 1200px;
    --column-space: 20px;
    --row-space: 20px;
    --spacer: 1rem;
}

.row {
    display: flex;
    flex-wrap: wrap;
    margin-inline: calc(var(--column-space) * -1 / 2);
    margin-top: calc(var(--row-space) * -1);
}

.row [class^="col"] {
    flex-basis: calc(100% / var(--max-column) * var(--column-size));
    max-width: calc(100% / var(--max-column) * var(--column-size));
    padding-inline: calc(var(--column-space) / 2);
    padding-top: var(--row-space);
}

$spacer-mutilples: (
    "0": 0,
    "1": 0.25,
    "2": 0.5,
    "3": 1,
    "4": 1.5,
    "5": 3
);
/* GUTTER */
@each $nth, $muitl in $spacer-mutilples {
    .row.gx-#{$nth} {
        --column-space: calc(var(--spacer) * #{$muitl});
    }
    .row.gy-#{$nth} {
        --row-space: calc(var(--spacer) * #{$muitl});
    }
}

/* ========= CUSTOM BEGIN ===============*/

.col-31 {
    --column-size: 3.7;
}

.col-38 {
    --column-size: 3.8;
}

.col-44 {
    --column-size: 4.4;
}

/* UTILITY FLEX*/

.justify-center {
    justify-content: center;
}

.align-center {
    align-items: center;
}

/* Custom Gutter*/
.row.gx-ct-84 {
    --column-space: 84px;
}

.row.gx-ct-52 {
    --column-space: 52px;
}

.row.gy-ct-96 {
    --row-space: 96px;
}

.row.gy-ct-40 {
    --row-space: 40px;
}

/* ========= CUSTOM END ===============*/

$grid-breakpoints: (
    xs: 0,
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
    xxl: 1400px
);


$container-max-widths: (
    xs: 100%,
    sm: 540px,
    md: 720px,
    lg: 960px,
    xl: 1140px,
    xxl: 1200px
);

$container-sm-max-widths: (
    xs: (0.8125 * 100%),
    sm: (0.8125 * 540px),
    md: (0.8125 * 720px),
    lg: (0.8125 * 780px),
    xl: (0.8125 * 1140px),
    xxl: (0.8125 * 1200px)
);


/*Container*/

/* COL */
@for $i from 1 through 12 {
    .col-#{$i} {
        --column-size: #{$i};
    }
}

@each $break-point, $max-width in $grid-breakpoints {
    /* col-#{$break-point} */
    @include mixin.make-col($break-point, $max-width);
}

/*Container*/
.container-sm,
.contaner {
    margin-inline: auto;
}
@each $break-point, $max-width in $grid-breakpoints {
    $container-max-width: map.get($container-max-widths, $break-point);
    /*  #{$break-point} */
    @include mixin.make-container($break-point, $max-width, $container-max-width);
}

/*Container Inner*/
@each $break-point, $max-width in $grid-breakpoints {
    $container-max-width: map.get($container-sm-max-widths, $break-point);
    /*  #{$break-point} */
    @include mixin.make-container-sm($break-point, $max-width, $container-max-width);
}
